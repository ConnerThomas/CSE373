import java.util.EmptyStackException;

/**
 * Conner Thomas
 * CSE 373
 * 10-1-2013
 * 
 * Implementation of a stack for doubles using an array
 */
public class ArrayStack implements DStack {
		
	private double[] arr = new double[10];
	double[] newArr;
	
	private void increaseSize() {
		newArr = new double[arr.length * 2];
		for (int i=0; i < arr.length;) {
			newArr[i] = arr[i];
		}
		arr = newArr;
	}
	
	private void checkSize() {
		if ()
	}
	
	/**
	 * isEmpty checks if the stack is empty or not
     * @return true if stack is empty, false if stack is not
     */
	public boolean isEmpty() {
		return (arr.length == 0);
	} 
	
	/**
     * push adds a value to the top of the stack
     */
	public void push (double d) {
		
	}
	
	/**
     * pop takes the value at the top of the stack, returns it and deletes it from the stack
     * @return the deleted value
     * @throws EmptyStackException if stack is empty
     */	
	public double pop() {
		return 0;
	}
	
	/**
     * peek returns the value at the top of the stack and does not delete it as pop does
     * @return the value at the top of the stack
     * @throws EmptyStackException if stack is empty
     */
	public double peek() {
		return 0;
	}
}
